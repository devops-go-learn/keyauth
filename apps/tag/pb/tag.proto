syntax = "proto3";

package infraboard.keyauth.tag;
option go_package = "github.com/infraboard/keyauth/apps/tag";

import "apps/tag/pb/enum.proto";
import "apps/tag/pb/request.proto";

// Tag is 标签
message TagKey {
    // Tag ID
    // @gotags: bson:"_id" json:"id"
    string id = 1;
    // 创建时间
    // @gotags: bson:"create_at" json:"create_at"
    int64 create_at = 2;
    // 更新时间
    // @gotags: bson:"update_at" json:"update_at"
    int64 update_at = 3;
    // Tag所属的域
    // @gotags: bson:"domain" json:"domain"
    string domain = 4;
    // 创建人
    // @gotags: bson:"creater" json:"creater"
    string creater = 5;
    // tag生效范围
    // @gotags: bson:"scope_type" json:"scope_type"
    ScopeType scope_type = 6;
    // tag属于哪个namespace
    // @gotags: bson:"namespace" json:"namespace"
    string namespace = 7;
    // 建名称
    // @gotags: bson:"key_name" json:"key_name"
    string key_name = 8;
    // 建标识
    // @gotags: bson:"key_label" json:"key_label"
    string key_label = 9;
    // 建描述
    // @gotags: bson:"key_desc" json:"key_desc"
    string key_desc = 10;
    // 值来源
    // @gotags: bson:"value_from" json:"value_from"
    ValueFrom value_from = 11;
    // http 获取Tag 值的参数
    // @gotags: bson:"http_from_option" json:"http_from_option,omitempty"
    HTTPFromOption http_from_option = 12;
    // @gotags: bson:"-" json:"values,omitempty"
    repeated TagValue values = 13;
}

message TagValue {
    // Tag Value ID
    // @gotags: bson:"_id" json:"id"
    string id = 1;
    // 创建时间
    // @gotags: bson:"create_at" json:"create_at"
    int64 create_at = 2;
    // 更新时间
    // @gotags: bson:"update_at" json:"update_at"
    int64 update_at = 3;
    // 创建人
    // @gotags: bson:"creater" json:"creater"
    string creater = 4;
    // 关联的Tag key
    // @gotags: bson:"key_id" json:"key_id"
    string key_id = 5;
    // String 类型的值
    // @gotags: bson:"value" json:"value"
    ValueOption value = 6;
}

message TagKeySet {
    // @gotags: bson:"total" json:"total"
    int64 total = 1;
    // @gotags: bson:"items" json:"items"
    repeated TagKey items = 2;
}

message TagValueSet {
    // @gotags: bson:"total" json:"total"
    int64 total = 1;
    // @gotags: bson:"items" json:"items"
    repeated TagValue items = 2;
}