syntax = "proto3";

package infraboard.keyauth.application;
option go_package = "github.com/infraboard/keyauth/app/application";

import "github.com/infraboard/mcube/pb/page/page.proto";

enum ClientType {
    CONFIDENTIAL = 0;
    PUBLIC = 1;
}

// CreateApplicatonRequest 创建应用请求
message CreateApplicatonRequest {
    // 是否是内建应用
    // @gotags: json:"build_in"
    bool build_in =9;
    // 所处于域
    // @gotags: json:"domain" validate:"required"
    string domain =10;
    // 应用属于那个用户
    // @gotags: json:"create_by"
    string create_by = 11;
    // 应用名称
    // @gotags: json:"name" validate:"required"
    string name = 1;
    // 应用的网站地址
    // @gotags: json:"website"
    string website = 2;
    // 应用的LOGO
    // @gotags: json:"logo_image"
    string logo_image = 3;
    // 应用简单的描述
    // @gotags: json:"description"
    string description = 4;
    // 应用重定向URI, Oauht2时需要该参数
    // @gotags: json:"redirect_uri"
    string redirect_uri = 5;
    // 应用申请的token的过期时间
    // @gotags: json:"access_token_expire_second"
    int64 access_token_expire_second = 6;
    // 刷新token过期时间
    // @gotags: json:"refresh_token_expire_second"
    int64 refresh_token_expire_second = 7;
    // 客户端类型
    // @gotags: json:"client_type"
    ClientType client_type = 8;
}

// DescribeApplicationRequest 查询应用详情
message DescribeApplicationRequest {
    // @gotags: json:"id"
    string id = 1;
    // @gotags: json:"client_id"
    string client_id = 2;
}

// DeleteApplicationRequest 查询应用详情
message DeleteApplicationRequest {
    string id = 1;
}

// QueryApplicationRequest 查询应用列表
message QueryApplicationRequest {
    infraboard.mcube.page.PageRequest page = 1 ;
    string account = 3;
}

// GetBuildInApplicationRequest 获取内建应用
message GetBuildInApplicationRequest {
    string name = 1;
}
