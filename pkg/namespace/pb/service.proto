syntax = "proto3";

package keyauth.namespace;
option go_package = "github.com/infraboard/keyauth/pkg/namespace";

import "pkg/namespace/pb/namespace.proto";
import "pkg/namespace/pb/request.proto";
import "github.com/infraboard/mcube/pb/http/entry.proto";

// NamespaceService todo
service NamespaceService {
	rpc CreateNamespace(CreateNamespaceRequest) returns(Namespace) {
		option (mcube.http.rest_api) = {
			path: "/namespaces"
			method: "POST"
			resource: "namespace"
			auth_enable: true
			permission_enable: true
			labels: [{
				key: "action"
				value: "create"
			}]
		};
	};
	rpc QueryNamespace(QueryNamespaceRequest) returns(Set) {
		option (mcube.http.rest_api) = {
			path: "/namespaces"
			method: "GET"
			resource: "namespace"
			auth_enable: true
			permission_enable: true
			labels: [{
				key: "action"
				value: "list"
			}]
		};
	};
	rpc DescribeNamespace(DescriptNamespaceRequest) returns(Namespace) {
		option (mcube.http.rest_api) = {
			path: "/namespaces/:id"
			method: "GET"
			resource: "namespace"
			auth_enable: true
			permission_enable: true
			labels: [{
				key: "action"
				value: "get"
			}]
		};
	};
	rpc DeleteNamespace(DeleteNamespaceRequest) returns(Namespace) {
		option (mcube.http.rest_api) = {
			path: "/namespaces/:id"
			method: "GET"
			resource: "namespace"
			auth_enable: true
			permission_enable: true
			labels: [{
				key: "action"
				value: "delete"
			}]
		};
	};
}