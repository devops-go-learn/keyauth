syntax = "proto3";

package keyauth.token;
option go_package = "github.com/infraboard/keyauth/pkg/token";

import "pkg/token/pb/request.proto";
import "pkg/token/pb/token.proto";
import "github.com/infraboard/mcube/pb/http/entry.proto";

service TokenService {
    rpc IssueToken(IssueTokenRequest) returns (Token) {
		option (mcube.http.rest_api) = {
			path: "/oauth2/tokens"
			method: "POST"
			resource: "token"
		};
	};
    rpc ValidateToken (ValidateTokenRequest) returns (Token) {
		option (mcube.http.rest_api) = {
			path: "/oauth2/tokens"
			method: "GET"
			resource: "token"
		};
	};
	rpc DescribeToken(DescribeTokenRequest) returns (Token);
    rpc RevolkToken(RevolkTokenRequest) returns (Token);
    rpc BlockToken(BlockTokenRequest) returns (Token);
	rpc QueryToken(QueryTokenRequest) returns (Set) {
		option (mcube.http.rest_api) = {
			path: "/applications/:id/tokens"
			method: "GET"
			resource: "token"
			auth_enable: true
			permission_enable: true
			labels: [{
				key: "action"
				value: "list"
			}]
		};
	};
}