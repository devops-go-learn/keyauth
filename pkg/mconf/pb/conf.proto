syntax = "proto3";

package infraboard.keyauth.mconf;
option go_package = "github.com/infraboard/keyauth/pkg/mconf";

import "pkg/mconf/pb/enum.proto";

// Micro is service provider
message Group {
    // 组名称
    // @gotags: bson:"_id" json:"name"
   string name = 1;
    // 组类型
    // @gotags: bson:"type" json:"type"
    Type type = 2;
    // 创建人
    // @gotags: bson:"creater" json:"creater"
    string creater = 3;
    // 创建的时间
    // @gotags: bson:"create_at" json:"create_at"
    int64 create_at = 4;
    // 描述信息
    // @gotags: bson:"description" json:"description"
    string description = 5;
}

// Item 健值项
message Item {
    // 项ID
    // @gotags: bson:"_id" json:"id"
    string id = 1;
    // 建的名称
    // @gotags: bson:"key" json:"key"
    string key = 2;
    // 关联的组
    // @gotags: bson:"group" json:"group"
    string group = 3;
    // 创建人
    // @gotags: bson:"creater" json:"creater"
    string creater = 4;
    // 创建的时间
    // @gotags: bson:"create_at" json:"create_at"
    int64 create_at = 5;
    // 创建的时间
    // @gotags: bson:"updater" json:"updater,omitempty"
    int64 updater = 6;
    // 更新时间
    // @gotags: bson:"update_at" json:"update_at,omitempty"
    int64 update_at = 7;
    // 值对应的值
    // @gotags: bson:"value" json:"value"
    string value = 8;
    // 描述信息
    // @gotags: bson:"description" json:"description,omitempty"
    string description = 9;
}

message ItemSet {
    // @gotags: bson:"total" json:"total"
    int64 total = 1;
    // @gotags: bson:"items" json:"items"
    repeated Item items = 2;
}

message GroupSet {
    // @gotags: bson:"total" json:"total"
    int64 total = 1;
    // @gotags: bson:"items" json:"items"
    repeated Group items = 2;
}