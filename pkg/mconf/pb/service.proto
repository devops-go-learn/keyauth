syntax = "proto3";

package keyauth.mconf;
option go_package = "github.com/infraboard/keyauth/pkg/mconf";

import "pkg/mconf/pb/request.proto";
import "pkg/mconf/pb/conf.proto";
import "github.com/infraboard/mcube/pb/http/entry.proto";

// MicroConfigService 服务
service MicroConfigService {
	rpc CreateGroup(CreateGroupRequest) returns(Group) {
		option (mcube.http.rest_api) = {
			path: "/services"
			method: "POST"
			resource: "service"
			auth_enable: true
		};
	};
	rpc QueryGroup(QueryGroupRequest) returns(GroupSet) {
		option (mcube.http.rest_api) = {
			path: "/services"
			method: "GET"
			resource: "service"
			auth_enable: true
		};
	};
	rpc DeleteGroup(DeleteGroupRequest) returns(Group) {
		option (mcube.http.rest_api) = {
			path: "/services/:id"
			method: "DELETE"
			resource: "service"
			auth_enable: true
		};
	};
	rpc QueryItem(QueryItemRequest) returns(ItemSet) {
		option (mcube.http.rest_api) = {
			path: "/services"
			method: "GET"
			resource: "service"
			auth_enable: true
		};
	};
	rpc AddItemToGroup(AddItemToGroupRequest) returns(ItemSet) {
		option (mcube.http.rest_api) = {
			path: "/services"
			method: "GET"
			resource: "service"
			auth_enable: true
		};
	};
	rpc RemoveItemFromGroup(RemoveItemFromGroupRequest) returns(ItemSet) {
		option (mcube.http.rest_api) = {
			path: "/services"
			method: "GET"
			resource: "service"
			auth_enable: true
		};
	};
}