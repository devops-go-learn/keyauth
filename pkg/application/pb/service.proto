syntax = "proto3";

package keyauth.application;
option go_package = "github.com/infraboard/keyauth/pkg/application";

import "pkg/application/pb/request.proto";
import "pkg/application/pb/application.proto";
import "github.com/infraboard/mcube/pb/http/entry.proto";

service UserService {
	rpc CreateUserApplication(CreateApplicatonRequest) returns(Application) {
		option (mcube.http.rest_api) = {
			path: "/applications/"
			method: "POST"
			resource: "application"
			auth_enable: true
			labels: [{
				key: "allow"
				value: "domain_admin"
			}]
		};
	};
	rpc DescribeApplication(DescribeApplicationRequest) returns(Application) {
		option (mcube.http.rest_api) = {
			path: "/applications/:id"
			method: "GET"
			resource: "application"
			auth_enable: true
			labels: [{
				key: "allow"
				value: "domain_admin"
			}]
		};
	};
	rpc QueryApplication(QueryApplicationRequest) returns(Set) {
		option (mcube.http.rest_api) = {
			path: "/applications/"
			method: "GET"
			resource: "application"
			auth_enable: true
			labels: [{
				key: "allow"
				value: "domain_admin"
			}]
		};
	};
	rpc DeleteApplication(DeleteApplicationRequest) returns(Application) {
		option (mcube.http.rest_api) = {
			path: "/applications/:id"
			method: "DELETE"
			resource: "application"
			auth_enable: true
			labels: [{
				key: "allow"
				value: "domain_admin"
			}]
		};
	};
}

service AdminService {
	rpc CreateBuildInApplication(CreateApplicatonRequest) returns (Application);
	rpc GetBuildInApplication(GetBuildInApplicationRequest) returns(Application);
}